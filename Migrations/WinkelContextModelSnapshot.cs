// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WinkelApp.Model;

namespace WinkelApp.Migrations
{
    [DbContext(typeof(WinkelContext))]
    partial class WinkelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WinkelApp.Model.Auteur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phonenumber")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Auteurs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Email = "HBersen@Winkel.nl",
                            Firstname = "Henk",
                            Lastname = "Bersen",
                            Phonenumber = 612459246
                        },
                        new
                        {
                            id = 2,
                            Email = "LJansen@Winkel.nl",
                            Firstname = "Lisa",
                            Lastname = "Jansen",
                            Phonenumber = 651234943
                        });
                });

            modelBuilder.Entity("WinkelApp.Model.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Auteurid")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("Auteurid");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Auteurid = 1,
                            Description = "Een knuffel die er uitziet als een hond",
                            Name = "Honden knuffel",
                            Price = 10.0
                        },
                        new
                        {
                            id = 2,
                            Auteurid = 1,
                            Description = "Een knuffel die er uitziet als een kat",
                            Name = "Katten knuffel",
                            Price = 10.0
                        },
                        new
                        {
                            id = 3,
                            Auteurid = 2,
                            Description = "Een kleine boot gemaakt van hout",
                            Name = "Houten boot",
                            Price = 15.0
                        });
                });

            modelBuilder.Entity("WinkelApp.Model.Item", b =>
                {
                    b.HasOne("WinkelApp.Model.Auteur", null)
                        .WithMany("Items")
                        .HasForeignKey("Auteurid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WinkelApp.Model.Auteur", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
